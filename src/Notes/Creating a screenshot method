You create a screen shot method in the common method class because as its a common method,

1) create the screenshot method as you normally do by doing the following

// to take a screen shot
// cucumber accepts array of byte for screenshot

public static Byte [] takeScreenshot(String fileNamee){
    TakesScreenshot ts = (TakesScreenshot) driver;
    byte [] picBytes = ts.getScreenshotAs(OutputType.BYTES);
    File sourceFile = ts.getScreenshotAs(OutputType.FILE);

2)  We want to take a screen shot in every run, so when the test fails and when it passes,
    we want to make sure the screenshot name is dynamic as it will always be overridden to first do this,
    You need to create a variable in the constants class,

    public static final String SCREENSHOT_FILEPATH = System.getProperty("user.dir")+"/screenshots/";

    try {
            FileUtils.copyFile(sourceFile, new File(Constants.SCREENSHOT_FILEPATH +
                    fileName + " " + getTimeStamp("yyyy-MM-dd-HH-mm-ss")+".png"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return picBytes;}

3) Now we need to create a method to collect the date and time of the screen shot,

 //to get the time in specific format so that we can add it in the name of screenshot
    public static String getTimeStamp(String pattern){
        Date date = new Date();
        //to format the date according to the choice of our own
        SimpleDateFormat sdf = new SimpleDateFormat(pattern);
        return sdf.format(date);
    }
4) The scenario class from cucumber holds the complete information of the execution

This class knows if a test passes or fails but will also save the screenshot in the location depending on
where it is saved

 @After
    public void end(Scenario scenario){

        //scenario class from cucumber holds the complete information of the execution
        byte[] pic;

        if(scenario.isFailed()){
            pic = takeScreenshot("failed/" + scenario.getName());
        }else {
            pic = takeScreenshot("passed/" + scenario.getName());
        }

        //it will attach the screenshot in report
        //pic holds the screenshot, image/png defines the extension of image
        // scenario.getname is to provide the name of screeshot in the report
        scenario.attach(pic, "image/png", scenario.getName());
        closeBrowser();
    }